{"version":3,"file":"static/js/149.2b8b51ef.chunk.js","mappings":"gRAEaA,EAAaC,EAAAA,GAAAA,IAAH,4FAMVC,EAAYD,EAAAA,GAAAA,IAAH,4FAMTE,EAAYF,EAAAA,GAAAA,IAAH,mGAMTG,EAAaH,EAAAA,GAAAA,GAAH,mF,SCqBvB,EApCa,WACX,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMC,GAAN,iGAEWC,EAAAA,EAAAA,IAAiBD,GAF5B,OAEZE,EAFY,OAGlBP,EAAgBO,EAAeC,KAAKC,MAHlB,gDAKlBC,QAAQC,IAAI,SALM,yDAAH,sDAQnBP,EAAcH,EACf,GAAE,CAACA,KAGF,qBAASW,MAAO,CAAEC,OAAQ,QAASC,SAAU,QAA7C,WACE,SAACrB,EAAD,UAAY,sBACZ,SAACI,EAAD,UACGE,EAAagB,KAAI,YAA4C,IAAzCV,EAAwC,EAAxCA,GAAIW,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxC,OACE,2BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,KAEP,SAACrB,EAAD,UAAYqB,KACZ,SAACpB,EAAD,UAAYqB,GAAS,qBAAkBA,OANhCZ,EASZ,QAIR,C,+LCtCDgB,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,8FACVF,EAAAA,EAAAA,IAAA,mCAAsCC,EAAtC,oBADU,mFAAH,qDAITE,EAAkB,mCAAG,WAAMC,GAAN,iFACnBJ,EAAAA,EAAAA,IAAA,+BACaC,EADb,iCAC4CG,EAD5C,YADmB,mFAAH,sDAMlBC,EAAmB,mCAAG,WAAMrB,GAAN,iFACpBgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,oBAAkCiB,EAAlC,oBADoB,mFAAH,sDAInBhB,EAAgB,mCAAG,WAAMD,GAAN,iFACjBgB,EAAAA,EAAAA,IAAA,iBACDhB,EADC,4BACqBiB,EADrB,oBADiB,mFAAH,sDAMhBK,EAAmB,mCAAG,WAAMtB,GAAN,iFACpBgB,EAAAA,EAAAA,IAAA,iBACDhB,EADC,4BACqBiB,EADrB,2BADoB,mFAAH,qD","sources":["components/Cast/styled.js","components/Cast/Cast.jsx","services/TmdbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastHeader = styled.div`\n  text-decoration: none;\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nexport const ActorName = styled.div`\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: bold;\n`;\n\nexport const Character = styled.div`\n  text-decoration: underline;\n  font-size: 18px;\n  font-weight: normal;\n`;\n\nexport const ActorsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { handleMoviesCast } from 'services/TmdbApi';\nimport { CastHeader, ActorName, Character, ActorsList } from './styled';\n\nconst Cast = () => {\n  const [searchedCast, setSearchedCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const handleCredits = async id => {\n      try {\n        const searchedActors = await handleMoviesCast(id);\n        setSearchedCast(searchedActors.data.cast);\n      } catch (error) {\n        console.log('Error');\n      }\n    };\n    handleCredits(movieId);\n  }, [movieId]);\n\n  return (\n    <section style={{ height: '800px', overflow: 'auto' }}>\n      <CastHeader>Cast of the film</CastHeader>\n      <ActorsList>\n        {searchedCast.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n              <ActorName>{name}</ActorName>\n              <Character>{character && `Character: ${character}`}</Character>\n            </li>\n          );\n        })}\n      </ActorsList>\n    </section>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst APIKEY = 'b2f603dc7bfb8f273c9f4e293e842183';\n\nexport const getMovies = async () => {\n  return await axios.get(`trending/all/day?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesSearch = async query => {\n  return await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1`\n  );\n};\n\nexport const handleMoviesDetails = async id => {\n  return await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesCast = async id => {\n  return await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n};\n\nexport const handleMoviesReviews = async id => {\n  return await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n};\n"],"names":["CastHeader","styled","ActorName","Character","ActorsList","useState","searchedCast","setSearchedCast","movieId","useParams","useEffect","handleCredits","id","handleMoviesCast","searchedActors","data","cast","console","log","style","height","overflow","map","name","character","profile_path","src","alt","axios","APIKEY","getMovies","handleMoviesSearch","query","handleMoviesDetails","handleMoviesReviews"],"sourceRoot":""}