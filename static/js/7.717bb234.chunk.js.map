{"version":3,"file":"static/js/7.717bb234.chunk.js","mappings":"uPAEaA,EAAaC,EAAAA,GAAAA,KAAH,6CAIVC,EAAYD,EAAAA,GAAAA,MAAH,4HAQTE,EAAWF,EAAAA,GAAAA,MAAH,kMAURG,EAAeH,EAAAA,GAAAA,OAAH,kN,mCCtBZI,EAAYJ,EAAAA,GAAAA,GAAH,oEAKTK,EAAYL,EAAAA,GAAAA,GAAH,kF,SCHhBM,GAAaN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,+HAUHQ,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnC,OACE,SAACL,EAAD,UACGI,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACT,EAAD,WACE,SAACE,EAAD,CAAYQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAAhD,SACGG,KAFWD,EADN,KASjB,ECpBYK,EAAY,WAAO,IAAD,EAC7B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCd,GAAWe,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,OAAVH,GAEJI,EAAkBJ,EACnB,GAAE,CAACA,IAEJ,IAAMI,EAAiB,mCAAG,WAAMJ,GAAN,iGAEOK,EAAAA,EAAAA,IAAmBL,GAF1B,OAEhBM,EAFgB,OAGtBV,EAAUU,EAAeC,KAAKC,SAHR,gDAKtBC,QAAQC,IAAI,SALU,yDAAH,sDA4BvB,OACE,2BACG,KACD,UAAClC,EAAD,CAAYmC,SAtBK,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBhB,EAAgB,CAAEC,MAAOc,EAAKE,SAAShB,MAAMiB,OAC9C,EAkBG,WACE,SAACvC,EAAD,WACE,SAACC,EAAD,CAAUuC,KAAK,OAAOC,KAAK,QAAQC,SAlBjB,SAAAR,GACxB,IAAMS,EAAeT,EAAMU,OAAOL,MAClC,MAAqB,KAAjBI,EACKtB,EAAgB,CAAC,GAEL,KAAjBC,EAAMuB,QACRC,MAAM,mBACNzB,EAAgB,CAAC,SAGnBA,EAAgB,CAAEC,MAAOqB,GAC1B,OASK,SAACzC,EAAD,CAAcsC,KAAK,SAAnB,SAA4B,eAE9B,SAACjC,EAAD,CAAYC,OAAQA,EAAQC,SAAUA,MAG3C,ECpDD,EAJe,WACb,OAAO,SAACO,EAAD,GACR,C,+LCFD+B,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,8FACVF,EAAAA,EAAAA,IAAA,mCAAsCC,EAAtC,oBADU,mFAAH,qDAITrB,EAAkB,mCAAG,WAAML,GAAN,iFACnByB,EAAAA,EAAAA,IAAA,+BACaC,EADb,iCAC4C1B,EAD5C,YADmB,mFAAH,sDAMlB4B,EAAmB,mCAAG,WAAMvC,GAAN,iFACpBoC,EAAAA,EAAAA,IAAA,iBAAoBpC,EAApB,oBAAkCqC,EAAlC,oBADoB,mFAAH,sDAInBG,EAAgB,mCAAG,WAAMxC,GAAN,iFACjBoC,EAAAA,EAAAA,IAAA,iBACDpC,EADC,4BACqBqC,EADrB,oBADiB,mFAAH,sDAMhBI,EAAmB,mCAAG,WAAMzC,GAAN,iFACpBoC,EAAAA,EAAAA,IAAA,iBACDpC,EADC,4BACqBqC,EADrB,2BADoB,mFAAH,qD","sources":["components/SearchBar/styled.js","components/MoviesList/styled.js","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx","services/TmdbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  margin-top: 50px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const FormText = styled.input`\n  display: inline-block;\n  padding: 8px 8px;\n  font-size: 15px;\n  font-weight: 600;\n  background-color: transparent;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n\nexport const SubmitButton = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 8px 8px;\n  font-size: 15px;\n  font-weight: 600;\n  background-color: transparent;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n","import styled from 'styled-components';\n\nexport const MovieName = styled.li`\n  font-size: 20px;\n  font-weight: normal;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { Link } from 'react-router-dom';\nimport { MovieList, MovieName } from './styled';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  list-style: auto;\n\n  :hover {\n    color: orange;\n  }\n`;\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <MovieList>\n      {movies.map(({ id, title }) => (\n        <MovieName key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </StyledLink>\n        </MovieName>\n      ))}\n    </MovieList>\n  );\n};\n","import { FormLabel, FormText, SubmitButton, SearchForm } from './styled';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { handleMoviesSearch } from 'services/TmdbApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nexport const SearchBar = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null) return;\n\n    getSearchedMovies(query);\n  }, [query]);\n\n  const getSearchedMovies = async query => {\n    try {\n      const searchedMovies = await handleMoviesSearch(query);\n      setMovies(searchedMovies.data.results);\n    } catch (error) {\n      console.log('Error');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n  };\n\n  const updateQueryString = event => {\n    const movieIdValue = event.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    if (query.trim() === '') {\n      alert('Empty line');\n      setSearchParams({});\n      return;\n    }\n    setSearchParams({ query: movieIdValue });\n  };\n\n  return (\n    <div>\n      {' '}\n      <SearchForm onSubmit={handleSubmit}>\n        <FormLabel>\n          <FormText type=\"text\" name=\"query\" onChange={updateQueryString} />\n        </FormLabel>\n        <SubmitButton type=\"submit\">Search</SubmitButton>\n      </SearchForm>\n      <MoviesList movies={movies} location={location} />\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import { SearchBar } from 'components/SearchBar/SearchBar';\n\nconst Movies = () => {\n  return <SearchBar />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst APIKEY = 'b2f603dc7bfb8f273c9f4e293e842183';\n\nexport const getMovies = async () => {\n  return await axios.get(`trending/all/day?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesSearch = async query => {\n  return await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1`\n  );\n};\n\nexport const handleMoviesDetails = async id => {\n  return await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesCast = async id => {\n  return await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n};\n\nexport const handleMoviesReviews = async id => {\n  return await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n};\n"],"names":["SearchForm","styled","FormLabel","FormText","SubmitButton","MovieName","MovieList","StyledLink","Link","MoviesList","movies","location","map","id","title","to","state","from","SearchBar","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useLocation","useEffect","getSearchedMovies","handleMoviesSearch","searchedMovies","data","results","console","log","onSubmit","event","preventDefault","form","currentTarget","elements","value","type","name","onChange","movieIdValue","target","trim","alert","axios","APIKEY","getMovies","handleMoviesDetails","handleMoviesCast","handleMoviesReviews"],"sourceRoot":""}