{"version":3,"file":"static/js/247.91e3a062.chunk.js","mappings":"yNAwCA,UApCa,WACX,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,WAAMC,GAAN,iGAEWC,EAAAA,EAAAA,IAAiBD,GAF5B,OAEZE,EAFY,OAGlBP,EAAgBO,EAAeC,KAAKC,MAHlB,gDAKlBC,QAAQC,IAAI,SALM,yDAAH,sDAQnBP,EAAcH,EACf,GAAE,CAACA,KAGF,gCACE,yBAAK,sBACL,wBACGF,EAAaa,KAAI,YAA4C,IAAzCP,EAAwC,EAAxCA,GAAIQ,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aACxC,OACE,2BACE,gBACEC,IAAG,yCAAoCD,GACvCE,IAAKJ,KAEP,yBAAMA,KACN,yBAAMC,GAAS,qBAAkBA,OAN1BT,EASZ,QAIR,C,+LCrCDa,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,8FACVF,EAAAA,EAAAA,IAAA,mCAAsCC,EAAtC,oBADU,mFAAH,qDAITE,EAAkB,mCAAG,WAAMC,GAAN,iFACnBJ,EAAAA,EAAAA,IAAA,+BACaC,EADb,iCAC4CG,EAD5C,YADmB,mFAAH,sDAMlBC,EAAmB,mCAAG,WAAMlB,GAAN,iFACpBa,EAAAA,EAAAA,IAAA,iBAAoBb,EAApB,oBAAkCc,EAAlC,oBADoB,mFAAH,sDAInBb,EAAgB,mCAAG,WAAMD,GAAN,iFACjBa,EAAAA,EAAAA,IAAA,iBACDb,EADC,4BACqBc,EADrB,oBADiB,mFAAH,sDAMhBK,EAAmB,mCAAG,WAAMnB,GAAN,iFACpBa,EAAAA,EAAAA,IAAA,iBACDb,EADC,4BACqBc,EADrB,2BADoB,mFAAH,qD","sources":["components/Cast/Cast.jsx","services/TmdbApi.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { handleMoviesCast } from 'services/TmdbApi';\n\nconst Cast = () => {\n  const [searchedCast, setSearchedCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const handleCredits = async id => {\n      try {\n        const searchedActors = await handleMoviesCast(id);\n        setSearchedCast(searchedActors.data.cast);\n      } catch (error) {\n        console.log('Error');\n      }\n    };\n    handleCredits(movieId);\n  }, [movieId]);\n\n  return (\n    <section>\n      <div>Cast of the film</div>\n      <ul>\n        {searchedCast.map(({ id, name, character, profile_path }) => {\n          return (\n            <li key={id}>\n              <img\n                src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                alt={name}\n              />\n              <div>{name}</div>\n              <div>{character && `Character: ${character}`}</div>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst APIKEY = 'b2f603dc7bfb8f273c9f4e293e842183';\n\nexport const getMovies = async () => {\n  return await axios.get(`trending/all/day?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesSearch = async query => {\n  return await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1`\n  );\n};\n\nexport const handleMoviesDetails = async id => {\n  return await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesCast = async id => {\n  return await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n};\n\nexport const handleMoviesReviews = async id => {\n  return await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n};\n"],"names":["useState","searchedCast","setSearchedCast","movieId","useParams","useEffect","handleCredits","id","handleMoviesCast","searchedActors","data","cast","console","log","map","name","character","profile_path","src","alt","axios","APIKEY","getMovies","handleMoviesSearch","query","handleMoviesDetails","handleMoviesReviews"],"sourceRoot":""}