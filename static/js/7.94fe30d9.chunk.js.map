{"version":3,"file":"static/js/7.94fe30d9.chunk.js","mappings":"0RAEaA,EAAaC,EAAAA,GAAAA,KAAH,6CAIVC,EAAYD,EAAAA,GAAAA,MAAH,4HAQTE,EAAWF,EAAAA,GAAAA,MAAH,kMAURG,EAAeH,EAAAA,GAAAA,OAAH,kN,SCtBZI,EAAY,SAAC,GAAoC,IAAlCC,EAAiC,EAAjCA,aAAcC,EAAmB,EAAnBA,aACxC,OACE,UAACP,EAAD,CAAYQ,SAAUF,EAAtB,WACE,SAACJ,EAAD,WACE,SAACC,EAAD,CAAUM,KAAK,OAAOC,KAAK,QAAQC,SAAUJ,OAE/C,SAACH,EAAD,CAAcK,KAAK,SAAnB,SAA4B,aAGjC,ECTYG,EAAYX,EAAAA,GAAAA,GAAH,oEAKTY,EAAYZ,EAAAA,GAAAA,GAAH,kFCHhBa,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,+HAUHe,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACnC,OACE,SAACL,EAAD,UACGI,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,SAACT,EAAD,WACE,SAACE,EAAD,CAAYQ,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMN,GAAhD,SACGG,KAFWD,EADN,KASjB,ECyBD,EA7Ce,WAAO,IAAD,EACnB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeS,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCb,GAAWc,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACM,OAAVH,GAEJI,EAAkBJ,EACnB,GAAE,CAACA,IAEJ,IAAMI,EAAiB,mCAAG,WAAMJ,GAAN,iGAEOK,EAAAA,EAAAA,IAAmBL,GAF1B,OAEhBM,EAFgB,OAGtBV,EAAUU,EAAeC,KAAKC,SAHR,gDAKtBC,QAAQC,IAAI,SALU,yDAAH,sDAwBvB,OACE,4BACE,SAACnC,EAAD,CAAWC,aAjBM,SAAAmC,GACnBA,EAAMC,iBACN,IAAMC,EAAOF,EAAMG,cACnBf,EAAgB,CAAEC,MAAOa,EAAKE,SAASf,MAAMgB,QAC7CH,EAAKI,OACN,EAY0CxC,aAVjB,SAAAkC,GACxB,IAAMO,EAAeP,EAAMQ,OAAOH,MAClC,GAAqB,KAAjBE,EACF,OAAOnB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEC,MAAOkB,GAC1B,KAKG,SAAChC,EAAD,CAAYC,OAAQA,EAAQC,SAAUA,MAG3C,C,+LC/CDgC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,8FACVF,EAAAA,EAAAA,IAAA,mCAAsCC,EAAtC,oBADU,mFAAH,qDAIThB,EAAkB,mCAAG,WAAML,GAAN,iFACnBoB,EAAAA,EAAAA,IAAA,+BACaC,EADb,iCAC4CrB,EAD5C,YADmB,mFAAH,sDAMlBuB,EAAmB,mCAAG,WAAMjC,GAAN,iFACpB8B,EAAAA,EAAAA,IAAA,iBAAoB9B,EAApB,oBAAkC+B,EAAlC,oBADoB,mFAAH,sDAInBG,EAAgB,mCAAG,WAAMlC,GAAN,iFACjB8B,EAAAA,EAAAA,IAAA,iBACD9B,EADC,4BACqB+B,EADrB,oBADiB,mFAAH,sDAMhBI,EAAmB,mCAAG,WAAMnC,GAAN,iFACpB8B,EAAAA,EAAAA,IAAA,iBACD9B,EADC,4BACqB+B,EADrB,2BADoB,mFAAH,qD","sources":["components/SearchBar/styled.js","components/SearchBar/SearchBar.jsx","components/MoviesList/styled.js","components/MoviesList/MoviesList.jsx","pages/Movies.jsx","services/TmdbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  margin-top: 50px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const FormText = styled.input`\n  display: inline-block;\n  padding: 8px 8px;\n  font-size: 15px;\n  font-weight: 600;\n  background-color: transparent;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n\nexport const SubmitButton = styled.button`\n  display: inline-block;\n  width: 100%;\n  padding: 8px 8px;\n  font-size: 15px;\n  font-weight: 600;\n  background-color: transparent;\n  border: 1px solid black;\n  cursor: pointer;\n`;\n","import { FormLabel, FormText, SubmitButton, SearchForm } from './styled';\n\nexport const SearchBar = ({ handleSubmit, updateString }) => {\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <FormLabel>\n        <FormText type=\"text\" name=\"query\" onChange={updateString} />\n      </FormLabel>\n      <SubmitButton type=\"submit\">Search</SubmitButton>\n    </SearchForm>\n  );\n};\n","import styled from 'styled-components';\n\nexport const MovieName = styled.li`\n  font-size: 20px;\n  font-weight: normal;\n`;\n\nexport const MovieList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n","import { Link } from 'react-router-dom';\nimport { MovieList, MovieName } from './styled';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  list-style: auto;\n\n  :hover {\n    color: orange;\n  }\n`;\n\nexport const MoviesList = ({ movies, location }) => {\n  return (\n    <MovieList>\n      {movies.map(({ id, title }) => (\n        <MovieName key={id}>\n          <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </StyledLink>\n        </MovieName>\n      ))}\n    </MovieList>\n  );\n};\n","import { useSearchParams, useLocation } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { handleMoviesSearch } from 'services/TmdbApi';\nimport { SearchBar } from 'components/SearchBar/SearchBar';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if (query === null) return;\n\n    getSearchedMovies(query);\n  }, [query]);\n\n  const getSearchedMovies = async query => {\n    try {\n      const searchedMovies = await handleMoviesSearch(query);\n      setMovies(searchedMovies.data.results);\n    } catch (error) {\n      console.log('Error');\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  const updateQueryString = event => {\n    const movieIdValue = event.target.value;\n    if (movieIdValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: movieIdValue });\n  };\n\n  return (\n    <div>\n      <SearchBar handleSubmit={handleSubmit} updateString={updateQueryString} />\n      <MoviesList movies={movies} location={location} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst APIKEY = 'b2f603dc7bfb8f273c9f4e293e842183';\n\nexport const getMovies = async () => {\n  return await axios.get(`trending/all/day?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesSearch = async query => {\n  return await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1`\n  );\n};\n\nexport const handleMoviesDetails = async id => {\n  return await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesCast = async id => {\n  return await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n};\n\nexport const handleMoviesReviews = async id => {\n  return await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n};\n"],"names":["SearchForm","styled","FormLabel","FormText","SubmitButton","SearchBar","handleSubmit","updateString","onSubmit","type","name","onChange","MovieName","MovieList","StyledLink","Link","MoviesList","movies","location","map","id","title","to","state","from","useState","setMovies","useSearchParams","searchParams","setSearchParams","query","get","useLocation","useEffect","getSearchedMovies","handleMoviesSearch","searchedMovies","data","results","console","log","event","preventDefault","form","currentTarget","elements","value","reset","movieIdValue","target","axios","APIKEY","getMovies","handleMoviesDetails","handleMoviesCast","handleMoviesReviews"],"sourceRoot":""}