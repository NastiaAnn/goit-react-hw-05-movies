{"version":3,"file":"static/js/14.12c69f71.chunk.js","mappings":"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","sources":["components/MovieItem/styled.js","components/MovieItem/MovieItem.jsx","pages/MovieDetails.jsx","services/TmdbApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieSection = styled.section`\n  display: flex;\n  flex-direction: row;\n  gap: 30px;\n  margin-top: 20px;\n`;\n\nexport const MovieName = styled.div`\n  text-decoration: underline;\n  font-size: 35px;\n  font-weight: bold;\n`;\n\nexport const Heading = styled.div`\n  text-decoration: none;\n  font-size: 28px;\n  font-weight: bold;\n`;\n\nexport const OverviewText = styled.div`\n  font-size: 25px;\n  font-weight: normal;\n  list-style: none;\n`;\n\nexport const DescriptionSection = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;\n","import {\n  MovieSection,\n  Heading,\n  MovieName,\n  OverviewText,\n  DescriptionSection,\n} from './styled';\nimport PropTypes from 'prop-types';\n\nexport const MovieItem = ({ movie }) => {\n  const {\n    poster_path,\n    original_title,\n    overview,\n    genres,\n    release_date,\n    vote_average,\n  } = movie;\n  return (\n    <MovieSection>\n      <img\n        src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n        alt={original_title}\n      />\n      <DescriptionSection>\n        <MovieName>\n          {original_title} ({release_date && release_date.substring(0, 4)})\n        </MovieName>\n        <Heading>\n          User Score: {vote_average ? Math.floor(vote_average * 10) : '0'}%\n        </Heading>\n        <Heading>Overview</Heading>\n        <OverviewText>{overview}</OverviewText>\n        <Heading>Genres</Heading>\n        <OverviewText>\n          {genres && genres.map(({ id, name }) => <li key={id}>{name}</li>)}\n        </OverviewText>\n      </DescriptionSection>\n    </MovieSection>\n  );\n};\nMovieItem.propTypes = {\n  movie: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport { useRef, Suspense, useState, useEffect } from 'react';\nimport { handleMoviesDetails } from 'services/TmdbApi';\nimport { MovieItem } from 'components/MovieItem/MovieItem';\nimport styled from 'styled-components';\nimport { ColorRing } from 'react-loader-spinner';\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 25px;\n  font-weight: bold;\n\n  :hover {\n    color: orange;\n  }\n`;\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const handleDetails = async id => {\n      try {\n        const searchedMovie = await handleMoviesDetails(id);\n        setMovie(searchedMovie.data);\n      } catch (error) {\n        console.log('Error');\n      }\n    };\n    handleDetails(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <StyledLink to={backLinkLocationRef.current}>Back to movies</StyledLink>\n      <MovieItem movie={movie} />\n\n      <ul>\n        <li>\n          <StyledLink to=\"cast\">Cast</StyledLink>\n        </li>\n        <li>\n          <StyledLink to=\"reviews\">Reviews</StyledLink>\n        </li>\n      </ul>\n      <Suspense\n        fallback={\n          <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst APIKEY = 'b2f603dc7bfb8f273c9f4e293e842183';\n\nexport const getMovies = async () => {\n  return await axios.get(`trending/all/day?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesSearch = async query => {\n  return await axios.get(\n    `search/movie?api_key=${APIKEY}&language=en-US&query=${query}&page=1`\n  );\n};\n\nexport const handleMoviesDetails = async id => {\n  return await axios.get(`/movie/${id}?api_key=${APIKEY}&language=en-US`);\n};\n\nexport const handleMoviesCast = async id => {\n  return await axios.get(\n    `/movie/${id}/credits?api_key=${APIKEY}&language=en-US`\n  );\n};\n\nexport const handleMoviesReviews = async id => {\n  return await axios.get(\n    `/movie/${id}/reviews?api_key=${APIKEY}&language=en-US&page=1`\n  );\n};\n"],"names":["MovieSection","styled","MovieName","Heading","OverviewText","DescriptionSection","MovieItem","movie","poster_path","original_title","overview","genres","release_date","vote_average","src","alt","substring","Math","floor","map","id","name","StyledLink","Link","useState","setMovie","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","handleDetails","handleMoviesDetails","searchedMovie","data","console","log","to","current","Suspense","fallback","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","axios","APIKEY","getMovies","handleMoviesSearch","query","handleMoviesCast","handleMoviesReviews"],"sourceRoot":""}